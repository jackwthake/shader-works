name: Quick Build Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quick-build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        config: ['release threads', 'debug nothreads']

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y build-essential cmake

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install cmake

    - name: Make build script executable
      run: chmod +x quick_build.sh

    - name: Run quick build
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          SDL_FLAGS="-DSDL_UNIX_CONSOLE_BUILD=ON" ./quick_build.sh ${{ matrix.config }}
        else
          ./quick_build.sh ${{ matrix.config }}
        fi

    - name: Verify binary exists
      run: |
        ls -la build/bin/
        file build/bin/basic_demo || file build/bin/basic_demo.exe

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: basic_demo-${{ matrix.os }}-${{ matrix.config }}
        path: build/bin/basic_demo*
        retention-days: 3