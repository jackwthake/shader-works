#include <Arduino.h>

#include <cstring>

#include <Adafruit_SPIFlash.h>
#include <SdFat_Adafruit_Fork.h>

#include "src/device.h"
#include "src/util/helpers.h"
#include "src/util/model.h"

#include "src/resource_manager.h"


static const char cube_obj_expected[] = 
  "o Cube\n"\
  "v 1.000000 -1.000000 -1.000000\n"\
  "v 1.000000 -1.000000 1.000000\n"\
  "v -1.000000 -1.000000 1.000000\n"\
  "v -1.000000 -1.000000 -1.000000\n"\
  "v 1.000000 1.000000 -0.999999\n"\
  "v 0.999999 1.000000 1.000001\n"\
  "v -1.000000 1.000000 1.000000\n"\
  "v -1.000000 1.000000 -1.000000\n"\
  "vt 1.000000 0.333333\n"\
  "vt 1.000000 0.666667\n"\
  "vt 0.666667 0.666667\n"\
  "vt 0.666667 0.333333\n"\
  "vt 0.666667 0.000000\n"\
  "vt 0.000000 0.333333\n"\
  "vt 0.000000 0.000000\n"\
  "vt 0.333333 0.000000\n"\
  "vt 0.333333 1.000000\n"\
  "vt 0.000000 1.000000\n"\
  "vt 0.000000 0.666667\n"\
  "vt 0.333333 0.333333\n"\
  "vt 0.333333 0.666667\n"\
  "vt 1.000000 0.000000\n"\
  "vn 0.000000 -1.000000 0.000000\n"\
  "vn 0.000000 1.000000 0.000000\n"\
  "vn 1.000000 0.000000 0.000000\n"\
  "vn -0.000000 0.000000 1.000000\n"\
  "vn -1.000000 -0.000000 -0.000000\n"\
  "vn 0.000000 0.000000 -1.000000\n"\ 
  "usemtl Material\n"\
  "s off\n"\
  "f 2/1/1 3/2/1 4/3/1\n"\
  "f 8/1/2 7/4/2 6/5/2\n"\
  "f 5/6/3 6/7/3 2/8/3\n"\
  "f 6/8/4 7/5/4 3/4/4\n"\
  "f 3/9/5 7/10/5 8/11/5\n"\
  "f 1/12/6 4/13/6 8/11/6\n"\
  "f 1/4/1 2/1/1 4/3/1\n"\
  "f 5/14/2 8/1/2 6/5/2\n"\
  "f 1/12/3 5/6/3 2/8/3\n"\
  "f 2/12/4 6/8/4 3/4/4\n"\
  "f 4/13/5 3/9/5 8/11/5\n"\
  "f 5/6/6 1/12/6 8/11/6";


static uint16_t bitmap_expected[] = {
  0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x0D20,0x6503,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x6503,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x7164,0x7204,0x7164,0x7204,0x7204,0x7164,0x7164,0x7164,0x6503,0x6503,0x6503,0x6503,0x6503,0x6503,0x6503,0x6503,0x0D20,0x0D20,0x6503,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0x7164,0x7204,0x7204,0x7204,0x9AC4,0x7164,0x7164,0x7164,0x7164,0x6503,0x7204,0x7164,0x7164,0x7164,0x7164,0x7164,0x0D20,0x6503,0x6503,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0x7164,0x7164,0x7204,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7204,0x9AC4,0x7164,0x7164,0x0D20,0x0D20,0x0D20,0x6503,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0x7164,0x7164,0x7164,0x7164,0x7204,0x7164,0x7204,0x7164,0x7164,0x9AC4,0x7204,0x7164,0x7164,0x7204,0x7204,0x7164,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x6503,0x0D20,0x0D20,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0x7164,0x7164,0x7204,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7204,0x7204,0x7204,0x7164,0x7164,0x9AC4,0x7164,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0x7164,0x7204,0x9AC4,0x7164,0x7164,0x7204,0x7164,0x7164,0x7204,0x7204,0x7164,0x9AC4,0x7164,0x7164,0x7164,0x7164,0x0D20,0x0D20,0x6503,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x7164,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0x0D20,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0x9AC4,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0x9AC4,0x9AC4,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F
};


void setup() {
  Serial.begin(115200);
  while(!Serial) {
    // Wait for serial to be ready
  }

  // Initialise hardware
  Device::pin_init();
  Device::tft_init();
  Resource_manager manager = Resource_manager();

  Serial.println("Begin resource manager test");
  Serial.println("loading text resource...");

  resource_id_t cube_id = manager.load_resource("cube.obj");
  if (cube_id < 0)
    log_panic("Failed to load cube.obj");
  
  if (cube_id != 0)
    log_panic("Unexpected cube id: %d Expected 0\n", cube_id);
  
  const Resource_entry_t *cube = manager.get_resource(cube_id);
  if (!cube)
    log_panic("Failed to retrieve cube resource at id %d\n", cube_id);
  if (cube->length == 0)
    log_panic("Resource entry length is zero");
  if (cube->data == nullptr)
    log_panic("Resource entry data is null");
  if (cube->type == INVALID_FILE)
    log_panic("Resource entry type is INVALID_FILE");

  Serial.printf("Cube: id: %d, length: %u\n", cube_id, cube->length, cube->data);
  Serial.println(reinterpret_cast<char*>(cube->data));
  if (strcmp(reinterpret_cast<char*>(cube->data), cube_obj_expected) != 0) {
    Serial.println("cube obj file contents do not match.");
  } else {
    Serial.println("cube obj file contents match.");
  }

  Serial.println("\nLoading bitmap resource...");

  resource_id_t bmp_id = manager.load_resource("atlas.bmp");
  if (bmp_id < 0)
    log_panic("Failed to load atlas.bmp");
  
  if (bmp_id != 1)
    log_panic("Unexpected cube id: %d Expected 1\n", cube_id);
  
  const Resource_entry_t *bmp = manager.get_resource(bmp_id);
  if (!bmp)
    log_panic("Failed to retrieve cube resource at id %d\n", cube_id);
  if (bmp->length == 0)
    log_panic("Resource entry length is zero");
  if (bmp->length != 80 * 24)
    log_panic("Bitmap is wrong size");
  if (bmp->data == nullptr)
    log_panic("Resource entry data is null");
  if (bmp->type == INVALID_FILE)
    log_panic("Resource entry type is INVALID_FILE");
  if (bmp->type != BITMAP_FILE)
    log_panic("Resource entry type should be BITMAP_FILE");

  Serial.println("Bitmap successfully loaded");
  Serial.println("Comparing to expected");
  if (memcmp(bmp->data, bitmap_expected, bmp->length) != 0) {
    log_panic("bitmap data does not match expected data.\n");
  }

  Serial.println("Memory matches expected values");
  Serial.println("executing draw call");
  Device::tft->drawRGBBitmap(0, 0, (uint16_t *)bmp->data, 80, 24);


  Serial.println("Finished resource test");
  Serial.flush();
  while (1) { delay(50); }
}


void loop() {}