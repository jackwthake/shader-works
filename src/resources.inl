#include <stdint.h>

typedef struct FileEntry {
	const char* name;
	uint32_t *data;
	unsigned int size;
} FileEntry;

const FileEntry files[] = {
	{
		"test.bmp",
		(uint32_t[]) {
			0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
			0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000,
			0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000,
			0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000,
			0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000,
			0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000,
			0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000,
			0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 
		},
		128
	}//,
	// {
	// 	"atlas.bmp",
	// 	(const uint16_t[]) { 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x0D20, 0x6503, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x6503, 0x630C, 0x630C, 0x630C, 0x630C, 0x630C, 0x6B4D, 0x6B4D, 0x6B4D, 0xE711, 0xE711, 0xE711, 0xE711, 0xEF2C, 0xE711, 0xE711, 0xE711, 0x8AA7, 0x4944, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x8AA7, 0x6DE6, 0x6DE6, 0x9F2A, 0xF81F, 0xF81F, 0xF81F, 0x9F2A, 0xF81F, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x5B7C, 0x5B7C, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7204, 0x7164, 0x7204, 0x7204, 0x7164, 0x7164, 0x7164, 0x6503, 0x6503, 0x6503, 0x6503, 0x6503, 0x6503, 0x6503, 0x6503, 0x0D20, 0x0D20, 0x6503, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x83F0, 0x6B4D, 0x6B4D, 0x83F0, 0x6B4D, 0x6B4D, 0x6B4D, 0xEF2C, 0xF76B, 0xF76B, 0xE711, 0xEF2C, 0xEF2C, 0xEF2C, 0xE711, 0x8AA7, 0x4944, 0x61C6, 0x61C6, 0x4944, 0x61C6, 0x61C6, 0x8AA7, 0x6DE6, 0x9F2A, 0xF81F, 0x9F2A, 0x9F2A, 0xF81F, 0x9F2A, 0x9F2A, 0x3310, 0x5B7C, 0x5B7C, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7204, 0x7204, 0x7204, 0x9AC4, 0x7164, 0x7164, 0x7164, 0x7164, 0x6503, 0x7204, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x0D20, 0x6503, 0x6503, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x83F0, 0x6B4D, 0x6B4D, 0x6B4D, 0x6B4D, 0x83F0, 0x6B4D, 0xE711, 0xF76B, 0xEF2C, 0xEF2C, 0xE711, 0xE711, 0xEF2C, 0xE711, 0x8AA7, 0x61C6, 0x4944, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x8AA7, 0x9F2A, 0x9F2A, 0xF81F, 0x6DE6, 0x6DE6, 0x9F2A, 0x9F2A, 0x9F2A, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7164, 0x7204, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7204, 0x9AC4, 0x7164, 0x7164, 0x0D20, 0x0D20, 0x0D20, 0x6503, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x6B4D, 0x6B4D, 0x83F0, 0x6B4D, 0x6B4D, 0x6B4D, 0x6B4D, 0xE711, 0xF76B, 0xEF2C, 0xEF2C, 0xE711, 0xEF2C, 0xE711, 0xE711, 0x8AA7, 0x61C6, 0x4944, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x8AA7, 0xF81F, 0xF81F, 0xF81F, 0x9F2A, 0x6DE6, 0x9F2A, 0xF81F, 0x6DE6, 0x3310, 0x3310, 0x3310, 0x3310, 0x5B7C, 0x5B7C, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7164, 0x7164, 0x7164, 0x7204, 0x7164, 0x7204, 0x7164, 0x7164, 0x9AC4, 0x7204, 0x7164, 0x7164, 0x7204, 0x7204, 0x7164, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x6503, 0x0D20, 0x0D20, 0x630C, 0x6B4D, 0x6B4D, 0x6B4D, 0x6B4D, 0x83F0, 0x6B4D, 0x6B4D, 0xE711, 0xEF2C, 0xE711, 0xE711, 0xF76B, 0xEF2C, 0xF76B, 0xE711, 0x8AA7, 0x61C6, 0x4944, 0x61C6, 0x61C6, 0x4944, 0x61C6, 0x8AA7, 0xF81F, 0x9F2A, 0xF81F, 0x9F2A, 0x6DE6, 0xF81F, 0xF81F, 0xF81F, 0x3310, 0x5B7C, 0x5B7C, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7164, 0x7204, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7204, 0x7204, 0x7204, 0x7164, 0x7164, 0x9AC4, 0x7164, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x630C, 0x630C, 0x6B4D, 0x83F0, 0x6B4D, 0x6B4D, 0x6B4D, 0xE711, 0xE711, 0xF76B, 0xEF2C, 0xE711, 0xEF2C, 0xF76B, 0xE711, 0x8AA7, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x4944, 0x61C6, 0x8AA7, 0x9F2A, 0x9F2A, 0x9F2A, 0x9F2A, 0x9F2A, 0x9F2A, 0x9F2A, 0x9F2A, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x5B7C, 0x5B7C, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7204, 0x9AC4, 0x7164, 0x7164, 0x7204, 0x7164, 0x7164, 0x7204, 0x7204, 0x7164, 0x9AC4, 0x7164, 0x7164, 0x7164, 0x7164, 0x0D20, 0x0D20, 0x6503, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x83F0, 0x6B4D, 0x6B4D, 0x6B4D, 0x83F0, 0x6B4D, 0x6B4D, 0xE711, 0xEF2C, 0xE711, 0xF76B, 0xE711, 0xE711, 0xEF2C, 0xE711, 0x8AA7, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x4944, 0x61C6, 0x8AA7, 0xF81F, 0x9F2A, 0x6DE6, 0xF81F, 0x6DE6, 0x9F2A, 0x6DE6, 0x9F2A, 0x3310, 0x3310, 0x5B7C, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x7164, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x0D20, 0x630C, 0x6B4D, 0x6B4D, 0x630C, 0x630C, 0x630C, 0x630C, 0x630C, 0xE711, 0xE711, 0xE711, 0xE711, 0xEF2C, 0xE711, 0xE711, 0xE711, 0x8AA7, 0x4944, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x61C6, 0x8AA7, 0x9F2A, 0x9F2A, 0x6DE6, 0xF81F, 0x9F2A, 0x9F2A, 0x6DE6, 0xF81F, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0x3310, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F },
	// 	3840
	// },
};

const int num_files = 1;

#define CUBE_VERTEX_COUNT 36

// Cube vertices in counter-clockwise (CCW) winding order
// Each face is defined with outward-pointing normals
// 36 vertices total (6 faces × 2 triangles × 3 vertices)
// Face indices for reference:
// Triangles 0-1:   Front face
// Triangles 2-3:   Back face  
// Triangles 4-5:   Left face
// Triangles 6-7:   Right face
// Triangles 8-9:   Top face
// Triangles 10-11: Bottom face
float3 cube_vertices[CUBE_VERTEX_COUNT] = {
  // Front face (Z = +0.5) - looking at it from outside
  {-0.5f, -0.5f,  0.5f},  // Bottom-left
  { 0.5f, -0.5f,  0.5f},  // Bottom-right  
  { 0.5f,  0.5f,  0.5f},  // Top-right
  
  {-0.5f, -0.5f,  0.5f},  // Bottom-left
  { 0.5f,  0.5f,  0.5f},  // Top-right
  {-0.5f,  0.5f,  0.5f},  // Top-left
  
  // Back face (Z = -0.5) - looking at it from outside  
  { 0.5f, -0.5f, -0.5f},  // Bottom-right
  {-0.5f, -0.5f, -0.5f},  // Bottom-left
  {-0.5f,  0.5f, -0.5f},  // Top-left
  
  { 0.5f, -0.5f, -0.5f},  // Bottom-right
  {-0.5f,  0.5f, -0.5f},  // Top-left
  { 0.5f,  0.5f, -0.5f},  // Top-right
  
  // Left face (X = -0.5) - looking at it from outside
  {-0.5f, -0.5f, -0.5f},  // Bottom-back
  {-0.5f, -0.5f,  0.5f},  // Bottom-front
  {-0.5f,  0.5f,  0.5f},  // Top-front
  
  {-0.5f, -0.5f, -0.5f},  // Bottom-back
  {-0.5f,  0.5f,  0.5f},  // Top-front
  {-0.5f,  0.5f, -0.5f},  // Top-back
  
  // Right face (X = +0.5) - looking at it from outside
  { 0.5f, -0.5f,  0.5f},  // Bottom-front
  { 0.5f, -0.5f, -0.5f},  // Bottom-back
  { 0.5f,  0.5f, -0.5f},  // Top-back
  
  { 0.5f, -0.5f,  0.5f},  // Bottom-front
  { 0.5f,  0.5f, -0.5f},  // Top-back
  { 0.5f,  0.5f,  0.5f},  // Top-front
  
  // Top face (Y = +0.5) - looking down at it from above
  {-0.5f,  0.5f,  0.5f},  // Front-left
  { 0.5f,  0.5f,  0.5f},  // Front-right
  { 0.5f,  0.5f, -0.5f},  // Back-right
  
  {-0.5f,  0.5f,  0.5f},  // Front-left
  { 0.5f,  0.5f, -0.5f},  // Back-right
  {-0.5f,  0.5f, -0.5f},  // Back-left
  
  // Bottom face (Y = -0.5) - looking up at it from below
  {-0.5f, -0.5f, -0.5f},  // Back-left
  { 0.5f, -0.5f, -0.5f},  // Back-right
  { 0.5f, -0.5f,  0.5f},  // Front-right
  
  {-0.5f, -0.5f, -0.5f},  // Back-left
  { 0.5f, -0.5f,  0.5f},  // Front-right
  {-0.5f, -0.5f,  0.5f}   // Front-left
};

float2 cube_uvs[36] = {
    // Front face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},

    // Back face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},

    // Left face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},

    // Right face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},

    // Top face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},

    // Bottom face
    {0.0f, 0.0f}, {1.0f, 0.0f}, {1.0f, 1.0f},
    {0.0f, 0.0f}, {1.0f, 1.0f}, {0.0f, 1.0f},
};
